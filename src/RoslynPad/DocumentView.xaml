<UserControl
    x:Class="RoslynPad.DocumentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editor="clr-namespace:RoslynPad.Editor;assembly=RoslynPad.Editor.Windows"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rp="clr-namespace:RoslynPad"
    xmlns:ui="clr-namespace:RoslynPad.UI;assembly=RoslynPad.Common.UI"
    d:DataContext="{d:DesignInstance ui:OpenDocumentViewModel}"
    mc:Ignorable="d">
    <FrameworkElement.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RunCommand, Mode=OneTime}" />
        <KeyBinding Command="{Binding TerminateCommand, Mode=OneTime}" Gesture="Shift+F5" />
        <KeyBinding Command="{Binding SaveCommand, Mode=OneTime}" Gesture="Ctrl+S" />
        <KeyBinding Command="{Binding FormatDocumentCommand, Mode=OneTime}" Gesture="Ctrl+D" />
        <KeyBinding Command="{Binding CommentSelectionCommand, Mode=OneTime}" Gesture="Ctrl+K" />
        <KeyBinding Command="{Binding UncommentSelectionCommand, Mode=OneTime}" Gesture="Ctrl+U" />
        <KeyBinding Command="{Binding RenameSymbolCommand, Mode=OneTime}" Gesture="F2" />
    </FrameworkElement.InputBindings>
    <DockPanel>
        <StatusBar
            Background="{DynamicResource {x:Static rp:ThemeDictionary.StatusBarBackground}}"
            DockPanel.Dock="Bottom"
            Foreground="{DynamicResource {x:Static rp:ThemeDictionary.StatusBarForeground}}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel LastChildFill="False" />
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock>
                    Ln<Run Name="Ln" />
                    Col<Run Name="Col" />
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*" />
                <ColumnDefinition Width="10*" />
            </Grid.ColumnDefinitions>
            <ToolBar
                Grid.ColumnSpan="3"
                Background="Transparent"
                BorderBrush="{DynamicResource {x:Static rp:ThemeDictionary.TabBarBorder}}"
                BorderThickness="0,0,0,1">
                <Button Command="{Binding RunCommand, Mode=OneTime}" ToolTip="Run (F5)">
                    <Grid>
                        <Image>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="{StaticResource Run}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLiveMode}" Value="True">
                                            <Setter Property="Source" Value="{StaticResource Rocket}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <ProgressBar
                            Height="4"
                            VerticalAlignment="Bottom"
                            BorderThickness="0"
                            IsIndeterminate="{Binding IsRunning}"
                            Visibility="{Binding IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </Button>
                <Menu Background="Transparent">
                    <MenuItem
                        Padding="0"
                        FontFamily="Segoe UI Symbol"
                        Header="▾">
                        <MenuItem Command="{Binding ToggleLiveModeCommand}" Icon="{StaticResource Rocket}">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header" Value="Live Mode" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLiveMode}" Value="True">
                                            <Setter Property="Header" Value="Turn off Live Mode" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                    </MenuItem>
                </Menu>
                <Button
                    x:Name="BuildRunBtn"
                    Click="BuildRunBtn_Click"
                    ToolTip="Build and Run">
                    <Grid>
                        <Image>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="{StaticResource Run}" />
                                </Style>
                            </Image.Style>
                        </Image>
                        <ProgressBar
                            Height="4"
                            VerticalAlignment="Bottom"
                            BorderThickness="0"
                            IsIndeterminate="{Binding IsRunning}"
                            Visibility="{Binding IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </Button>
                <Grid
                    Width="60"
                    Margin="5,0"
                    Visibility="{Binding HasReportedProgress, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <ProgressBar
                        Maximum="1.0"
                        Minimum="0.0"
                        Value="{Binding ReportedProgress, Mode=OneWay}" />
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding ReportedProgress, Mode=OneWay, Converter={StaticResource DoubleToPercentageTextConverter}}" />
                </Grid>
                <Button
                    Command="{Binding TerminateCommand, Mode=OneTime}"
                    Content="{StaticResource Stop}"
                    IsEnabled="{Binding IsRunning}"
                    ToolTip="Terminate process (Shift+F5)" />
                <ComboBox
                    HorizontalContentAlignment="Stretch"
                    ItemsSource="{Binding AvailablePlatforms, Mode=OneTime}"
                    SelectedItem="{Binding Platform}" />
                <Button
                    Command="{Binding SetDefaultPlatformCommand, Mode=OneTime}"
                    Content="{StaticResource SetPlatform}"
                    ToolTip="Set platform as default" />
                <Separator />
                <Button
                    Command="{Binding SaveCommand, Mode=OneTime}"
                    Content="{StaticResource Save}"
                    ToolTip="Save (Ctrl+S)" />
                <Button
                    Command="{Binding OpenBuildPathCommand, Mode=OneTime}"
                    Content="{StaticResource PackageFolder}"
                    ToolTip="Open Build Folder" />
                <Separator />
                <Menu Name="RootMenu" Background="Transparent">
                    <MenuItem
                        Name="RootNuGetMenu"
                        Header="{Binding Mode=OneTime}"
                        IsSubmenuOpen="{Binding NuGet.IsPackagesMenuOpen}"
                        IsTextSearchEnabled="True"
                        ItemsSource="{Binding NuGet.Packages}"
                        ToolTip="NuGet Packages">
                        <MenuItem.HeaderTemplate>
                            <DataTemplate DataType="{x:Type ui:OpenDocumentViewModel}">
                                <Grid>
                                    <Image Source="{StaticResource NuGet}" />
                                    <ProgressBar
                                        Name="Spinner"
                                        Height="4"
                                        VerticalAlignment="Bottom"
                                        BorderThickness="0"
                                        IsIndeterminate="{Binding NuGet.IsSearching}"
                                        Visibility="{Binding NuGet.IsSearching, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsRestoring}" Value="True">
                                        <Setter TargetName="Spinner" Property="Foreground" Value="Orange" />
                                        <Setter TargetName="Spinner" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="Spinner" Property="IsIndeterminate" Value="True" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </MenuItem.HeaderTemplate>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Command" Value="{Binding InstallPackageCommand, Mode=OneTime}" />
                                <Setter Property="CommandParameter" Value="{Binding Mode=OneTime}" />
                                <Setter Property="Icon" Value="{Binding Mode=OneTime}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type ui:PackageData}">
                                <TextBlock>
                                    <Run Text="{Binding Id, Mode=OneTime}" />
                                    <Run Text="{Binding Version, Mode=OneTime}" />
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Resources>
                            <DataTemplate DataType="{x:Type ui:PackageData}">
                                <Menu Background="Transparent" ToolTip="Other versions">
                                    <MenuItem
                                        Padding="2"
                                        DisplayMemberPath="Version"
                                        ItemsSource="{Binding OtherVersions, Mode=OneTime}">
                                        <MenuItem.Header>
                                            <TextBlock
                                                FontFamily="Segoe UI Symbol"
                                                FontSize="8"
                                                FontWeight="Bold"
                                                Text="" />
                                        </MenuItem.Header>
                                        <ItemsControl.ItemContainerStyle>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Command" Value="{Binding ElementName=RootMenu, Path=DataContext.NuGet.InstallPackageCommand, Mode=OneTime}" />
                                                <Setter Property="CommandParameter" Value="{Binding Mode=OneTime}" />
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                    </MenuItem>
                                </Menu>
                            </DataTemplate>
                        </ItemsControl.Resources>
                    </MenuItem>
                </Menu>
                <Grid>
                    <TextBox
                        Name="NuGetSearch"
                        Width="200"
                        BorderBrush="#eee"
                        PreviewKeyDown="SearchTerm_OnPreviewKeyDown"
                        Style="{StaticResource {x:Static ToolBar.TextBoxStyleKey}}"
                        Text="{Binding NuGet.SearchTerm, Delay=500, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Foreground="DarkGray"
                        IsHitTestVisible="False"
                        Text="Search NuGet (Ctrl+T)">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=NuGetSearch}" Value="">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Decorator VerticalAlignment="Center">
                    <CheckBox
                        Content="Prerelease"
                        Foreground="{DynamicResource {x:Static rp:ThemeDictionary.Foreground}}"
                        IsChecked="{Binding NuGet.Prerelease}"
                        ToolTip="Include prerelease packages" />
                </Decorator>
                <Separator />
                <Button
                    Command="{Binding FormatDocumentCommand, Mode=OneTime}"
                    Content="{StaticResource FormatDocument}"
                    ToolTip="Format Document (Ctrl+D)" />
                <Button
                    Command="{Binding CommentSelectionCommand, Mode=OneTime}"
                    Content="{StaticResource CommentCode}"
                    ToolTip="Comment Selection (Ctrl+K)" />
                <Button
                    Command="{Binding UncommentSelectionCommand, Mode=OneTime}"
                    Content="{StaticResource UncommentCode}"
                    ToolTip="Uncomment Selection (Ctrl+U)" />
                <Button
                    Command="{Binding RenameSymbolCommand, Mode=OneTime}"
                    Content="{StaticResource Rename}"
                    ToolTip="Rename Symbol (F2)" />
            </ToolBar>
            <editor:RoslynCodeEditor
                x:Name="Editor"
                Grid.Row="1"
                Grid.Column="0"
                x:FieldModifier="private"
                Background="{DynamicResource {x:Static rp:ThemeDictionary.EditorBackground}}"
                ContextActionsIcon="{StaticResource Bulb}"
                FontFamily="{Binding MainViewModel.Settings.EditorFontFamily}"
                Foreground="{DynamicResource {x:Static rp:ThemeDictionary.EditorForeground}}"
                Loaded="Editor_OnLoaded" />
            <TextBox
                x:Name="OutputTextBox"
                Grid.Row="1"
                Grid.Column="2"
                Background="#F8F8FF"
                IsReadOnly="True"
                TextWrapping="Wrap"
                VerticalScrollBarVisibility="Visible" />
        </Grid>
    </DockPanel>
</UserControl>
